{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khatia\\\\Desktop\\\\movie-tracker-app\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    if (query) {\n      const fetchMovies = async () => {\n        const result = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=YOUR_API_KEY&query=${query}`);\n        setMovies(result.data.results);\n      };\n      fetchMovies();\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"thTrGi8k2oUOnOrjYw0275ubyDU=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Search","_s","query","setQuery","movies","setMovies","fetchMovies","result","get","data","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","movie","src","poster_path","alt","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Khatia/Desktop/movie-tracker-app/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Search.css';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (query) {\n      const fetchMovies = async () => {\n        const result = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=YOUR_API_KEY&query=${query}`\n        );\n        setMovies(result.data.results);\n      };\n      fetchMovies();\n    }\n  }, [query]);\n\n  return (\n    <div className=\"search\">\n      <h2>Search Movies</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a movie...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <div className=\"movie-grid\">\n        {movies.map((movie) => (\n          <div key={movie.id} className=\"movie-card\">\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div className=\"movie-info\">\n              <h3>{movie.title}</h3>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,EAAE;MACT,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC9B,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC5B,wEAAwEN,KAAK,EAC/E,CAAC;QACDG,SAAS,CAACE,MAAM,CAACE,IAAI,CAACC,OAAO,CAAC;MAChC,CAAC;MACDJ,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKY,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBR,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBzB,OAAA;QAAoBY,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACxCb,OAAA;UACE0B,GAAG,EAAE,kCAAkCD,KAAK,CAACE,WAAW,EAAG;UAC3DC,GAAG,EAAEH,KAAK,CAACI;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFjB,OAAA;UAAKY,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBb,OAAA;YAAAa,QAAA,EAAKY,KAAK,CAACI;UAAK;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA,GAPEQ,KAAK,CAACK,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAxCID,MAAM;AAAA8B,EAAA,GAAN9B,MAAM;AA0CZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}