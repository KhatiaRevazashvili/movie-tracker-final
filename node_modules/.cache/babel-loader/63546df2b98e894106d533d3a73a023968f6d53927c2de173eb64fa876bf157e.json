{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khatia\\\\Desktop\\\\movie-tracker-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Import Link for navigation\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await axios.get(\n        'https://www.omdbapi.com/?apikey=1b457a18&s=batman' // Use the correct OMDB API URL and key\n      );\n      setMovies(result.data.Search);\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <h2>Trending Movies</h2>\n      <div className=\"movie-grid\">\n        {movies.map((movie) => (\n          <div key={movie.imdbID} className=\"movie-card\">\n            <Link to={`/movie/${movie.imdbID}`}>\n              <img\n                src={movie.Poster}\n                alt={movie.Title}\n              />\n              <div className=\"movie-info\">\n                <h3>{movie.Title}</h3>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const result = await axios.get(\"https://api.themoviedb.org/3/trending/movie/day?api_key=d4eb053b24b5d9c698ecc4ddd57619a2\");\n        setMovies(result.data.results);\n        setLoading(false); // Set loading to false when data is fetched\n      } catch (error) {\n        setError(\"Failed to fetch movies.\");\n        setLoading(false); // Stop loading on error\n      }\n    };\n    fetchMovies();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this); // Show loading text while fetching\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this); // Show error message\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trending Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) // In case the API returns an empty list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"6wevkd2F3PCn4cJR5qV0d4ozTn8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","loading","setLoading","error","setError","fetchMovies","result","get","data","results","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","movie","to","id","src","poster_path","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/Khatia/Desktop/movie-tracker-app/src/pages/Home.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Import Link for navigation\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const result = await axios.get(\n        'https://www.omdbapi.com/?apikey=1b457a18&s=batman' // Use the correct OMDB API URL and key\n      );\n      setMovies(result.data.Search);\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <h2>Trending Movies</h2>\n      <div className=\"movie-grid\">\n        {movies.map((movie) => (\n          <div key={movie.imdbID} className=\"movie-card\">\n            <Link to={`/movie/${movie.imdbID}`}>\n              <img\n                src={movie.Poster}\n                alt={movie.Title}\n              />\n              <div className=\"movie-info\">\n                <h3>{movie.Title}</h3>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const result = await axios.get(\n          \"https://api.themoviedb.org/3/trending/movie/day?api_key=d4eb053b24b5d9c698ecc4ddd57619a2\"\n        );\n        setMovies(result.data.results);\n        setLoading(false); // Set loading to false when data is fetched\n      } catch (error) {\n        setError(\"Failed to fetch movies.\");\n        setLoading(false); // Stop loading on error\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>; // Show loading text while fetching\n  }\n\n  if (error) {\n    return <div>{error}</div>; // Show error message\n  }\n\n  return (\n    <div className=\"home\">\n      <h2>Trending Movies</h2>\n      <div className=\"movie-grid\">\n        {movies.length > 0 ? (\n          movies.map((movie) => (\n            <div key={movie.id} className=\"movie-card\">\n              <Link to={`/movie/${movie.id}`}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                />\n                <div className=\"movie-info\">\n                  <h3>{movie.title}</h3>\n                </div>\n              </Link>\n            </div>\n          ))\n        ) : (\n          <p>No movies found.</p> // In case the API returns an empty list\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}